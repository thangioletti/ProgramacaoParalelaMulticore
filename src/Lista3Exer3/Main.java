/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lista3Exer3;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Wiliam
 */
public class Main extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Main
     *
     * @param caminho
     */
    public Main(List<String> caminho, String nomeArq, String extensao) {
        initComponents();
        this.camiDaPasta = caminho;
        this.extension = extensao;
        this.nameArquivo = nomeArq;
    }

    @Override
    public void run() {
        pesquisa(camiDaPasta);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeDoArquivo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        extensao = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome do Arquivo:");

        jLabel2.setText("Extensão:");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(extensao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(nomeDoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeDoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(extensao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String pastaOrigem = "";
        String caminhoDaPasta = "";
        // Criação do file chooser.  
        JFileChooser fileChooser = new JFileChooser();
        // Seta o título do diálogo.  
        fileChooser.setDialogTitle("Selecione a pasta");
        // Define o filtro de seleção.  
        /*fileChooser.addChoosableFileFilter(new FileNameExtensionFilter(
         "Arquivo CABRAL (*.cabral)", "cabral"));*/
        fileChooser.setAcceptAllFileFilterUsed(false);
        // Impede seleções múltiplas.  
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        // Exibe o diálogo.  
        int op = fileChooser.showOpenDialog(this);

        Object pastaAux;
        try {
            pastaOrigem = fileChooser.getSelectedFile().getName();
        } catch (NullPointerException erro) {
            return;
        }

        pastaAux = fileChooser.getCurrentDirectory();
        caminhoDaPasta = "" + pastaAux + "\\" + pastaOrigem;

        if (nomeDoArquivo.getText().equals("") && extensao.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha o campo Nome do Arquivo ou Extensão", "Campo vazio", JOptionPane.INFORMATION_MESSAGE, null);
        } else {
            List<String> aux = new ArrayList<>();
            aux.add(caminhoDaPasta);
            Main m1 = new Main(aux,nomeDoArquivo.getText(),extensao.getText());
            Thread t1 = new Thread(m1);
            t1.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private synchronized void pesquisa(List<String> todasPastas) {        
        if (todasPastas.size() != 0) {
            List<String> pastas = new ArrayList<>();
            int contPasta = 0;
            for (int a = 0; a < todasPastas.size(); a++) {
                // diretório que será listado.
                File baseFolder = new File(todasPastas.get(a));            
                // obtem a lista de arquivos
                File[] files = baseFolder.listFiles();
                for (int i = 0; i < files.length; i++) {
                    File file = files[i];
                    
                    if (file.isDirectory()) {
                        pastas.add(file.getPath());
                        contPasta++;
                        //System.out.println("Pasta: " + file.getName());
                    }else if(file.isFile()){ 
                        String auxx[] = file.getName().split("[.]");
                        String nomeArquivo = "";
                        for(int x = 0; x < auxx.length-1; x++){
                            nomeArquivo += auxx[x];
                        }
                        String extensao2 = auxx[auxx.length-1];                        
                        
                        /*Campo extensão está vazio, portanto,
                        a busca será feita pelo nome do arquivo
                        */
                        if(extension.equals("")){                            
                            if(nomeArquivo.equals(nameArquivo)){
                                System.out.println("Foi encontrado o arquivo com o nome "+
                                        nameArquivo+" em: "+file);
                            }
                        }else if(nameArquivo.equals("")){
                            if(extensao2.equals(extension)){
                                System.out.println("Foi encontrado o arquivo com a extensão "+
                                        extension+" em: "+file);
                            }
                        }else{
                            if(nomeArquivo.equals(nameArquivo) && extensao2.equals(extension)){
                                System.out.println("Foi encontrado o arquivo com o nome e extensão "+
                                        nameArquivo+"."+extension+" em: "+file);
                            }
                        }
                    } 
                }
                Main m2 = new Main(pastas,nameArquivo,extension);
                Thread t1 = new Thread(m2);
                t1.start();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main(null,null,null).setVisible(true);
            }
        });
    }
    private final String nameArquivo;
    private final String extension;
    private final List<String> camiDaPasta;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField extensao;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nomeDoArquivo;
    // End of variables declaration//GEN-END:variables
}
